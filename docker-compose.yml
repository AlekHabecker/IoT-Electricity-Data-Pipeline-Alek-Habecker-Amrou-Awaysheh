version: "3.8"
services:
  mosquitto:
    image: eclipse-mosquitto:2.0
    container_name: mosquitto
    ports:
      - "1883:1883"            # MQTT default port
      - "9001:9001"            # WebSocket port (optional)
    volumes:
      - ./mqtt/mosquitto.conf:/mosquitto/config/mosquitto.conf
      - ./mqtt/data:/mosquitto/data             # persistence (optional)
      - ./mqtt/log:/mosquitto/log               # log output (optional)
    restart: unless-stopped

  zookeeper:
    image: bitnami/zookeeper:3.8
    container_name: zookeeper
    ports:
      - "2181:2181"            # Zookeeper client port
    environment:
      - ZOO_ENABLE_AUTH=no
      - ZOO_SERVERS=0.0.0.0:2888:3888;0.0.0.0:2181

  kafka:
    image: bitnami/kafka:3.4
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"            # Kafka broker port
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
      - ALLOW_PLAINTEXT_LISTENER=yes
    volumes:
      - kafka_data:/bitnami/kafka                  # persist Kafka logs and data

  timescaledb:
    image: timescale/timescaledb-postgis:latest-pg14   # TimescaleDB on PostgreSQL 14
    container_name: timescaledb
    ports:
      - "5432:5432"            # Postgres port
    environment:
      - POSTGRES_USER=${alekhabecker_2028@depauw.edu}
      - POSTGRES_PASSWORD=${Hekoaahagency!2}
      - POSTGRES_DB=${IoT Sensor DB Amrou Awaysheh Alek Habecker}
    volumes:
      - timescale_data:/var/lib/postgresql/data       # persist database

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"            # Grafana web UI
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
    depends_on:
      - timescaledb
    volumes:
      - grafana_data:/var/lib/grafana

  # prometheus (optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml

volumes:
  kafka_data:
  timescale_data:
  grafana_data:
